Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DROP
    DUP
    OVER
    SWAP

Grammar

Rule 0     S' -> axioma
Rule 1     axioma -> axioma line
Rule 2     axioma -> empty
Rule 3     line -> COMMENT
Rule 4     line -> PONTO
Rule 5     line -> int int operationi
Rule 6     line -> float float operationf
Rule 7     line -> float int operationf
Rule 8     line -> int float operationf
Rule 9     line -> int line
Rule 10    line -> float line
Rule 11    line -> int
Rule 12    line -> float
Rule 13    int -> INT
Rule 14    float -> FLOAT
Rule 15    line -> COLON WORD COMMENT code SEMICOLON
Rule 16    code -> axioma
Rule 17    line -> WORD
Rule 18    operationi -> PLUS
Rule 19    operationi -> MINUS
Rule 20    operationi -> TIMES
Rule 21    operationi -> DIVIDE
Rule 22    operationi -> MOD
Rule 23    operationf -> PLUS
Rule 24    operationf -> MINUS
Rule 25    operationf -> TIMES
Rule 26    operationf -> DIVIDE
Rule 27    empty -> <empty>

Terminals, with rules where they appear

COLON                : 15
COMMENT              : 3 15
DIVIDE               : 21 26
DROP                 : 
DUP                  : 
FLOAT                : 14
INT                  : 13
MINUS                : 19 24
MOD                  : 22
OVER                 : 
PLUS                 : 18 23
PONTO                : 4
SEMICOLON            : 15
SWAP                 : 
TIMES                : 20 25
WORD                 : 15 17
error                : 

Nonterminals, with rules where they appear

axioma               : 1 16 0
code                 : 15
empty                : 2
float                : 6 6 7 8 10 12
int                  : 5 5 7 8 9 11
line                 : 1 9 10
operationf           : 6 7 8
operationi           : 5

Parsing method: LALR

state 0

    (0) S' -> . axioma
    (1) axioma -> . axioma line
    (2) axioma -> . empty
    (27) empty -> .

    COMMENT         reduce using rule 27 (empty -> .)
    PONTO           reduce using rule 27 (empty -> .)
    COLON           reduce using rule 27 (empty -> .)
    WORD            reduce using rule 27 (empty -> .)
    INT             reduce using rule 27 (empty -> .)
    FLOAT           reduce using rule 27 (empty -> .)
    $end            reduce using rule 27 (empty -> .)

    axioma                         shift and go to state 1
    empty                          shift and go to state 2

state 1

    (0) S' -> axioma .
    (1) axioma -> axioma . line
    (3) line -> . COMMENT
    (4) line -> . PONTO
    (5) line -> . int int operationi
    (6) line -> . float float operationf
    (7) line -> . float int operationf
    (8) line -> . int float operationf
    (9) line -> . int line
    (10) line -> . float line
    (11) line -> . int
    (12) line -> . float
    (15) line -> . COLON WORD COMMENT code SEMICOLON
    (17) line -> . WORD
    (13) int -> . INT
    (14) float -> . FLOAT

    COMMENT         shift and go to state 4
    PONTO           shift and go to state 5
    COLON           shift and go to state 8
    WORD            shift and go to state 9
    INT             shift and go to state 10
    FLOAT           shift and go to state 11

    line                           shift and go to state 3
    int                            shift and go to state 6
    float                          shift and go to state 7

state 2

    (2) axioma -> empty .

    COMMENT         reduce using rule 2 (axioma -> empty .)
    PONTO           reduce using rule 2 (axioma -> empty .)
    COLON           reduce using rule 2 (axioma -> empty .)
    WORD            reduce using rule 2 (axioma -> empty .)
    INT             reduce using rule 2 (axioma -> empty .)
    FLOAT           reduce using rule 2 (axioma -> empty .)
    $end            reduce using rule 2 (axioma -> empty .)
    SEMICOLON       reduce using rule 2 (axioma -> empty .)


state 3

    (1) axioma -> axioma line .

    COMMENT         reduce using rule 1 (axioma -> axioma line .)
    PONTO           reduce using rule 1 (axioma -> axioma line .)
    COLON           reduce using rule 1 (axioma -> axioma line .)
    WORD            reduce using rule 1 (axioma -> axioma line .)
    INT             reduce using rule 1 (axioma -> axioma line .)
    FLOAT           reduce using rule 1 (axioma -> axioma line .)
    $end            reduce using rule 1 (axioma -> axioma line .)
    SEMICOLON       reduce using rule 1 (axioma -> axioma line .)


state 4

    (3) line -> COMMENT .

    COMMENT         reduce using rule 3 (line -> COMMENT .)
    PONTO           reduce using rule 3 (line -> COMMENT .)
    COLON           reduce using rule 3 (line -> COMMENT .)
    WORD            reduce using rule 3 (line -> COMMENT .)
    INT             reduce using rule 3 (line -> COMMENT .)
    FLOAT           reduce using rule 3 (line -> COMMENT .)
    $end            reduce using rule 3 (line -> COMMENT .)
    SEMICOLON       reduce using rule 3 (line -> COMMENT .)


state 5

    (4) line -> PONTO .

    COMMENT         reduce using rule 4 (line -> PONTO .)
    PONTO           reduce using rule 4 (line -> PONTO .)
    COLON           reduce using rule 4 (line -> PONTO .)
    WORD            reduce using rule 4 (line -> PONTO .)
    INT             reduce using rule 4 (line -> PONTO .)
    FLOAT           reduce using rule 4 (line -> PONTO .)
    $end            reduce using rule 4 (line -> PONTO .)
    SEMICOLON       reduce using rule 4 (line -> PONTO .)


state 6

    (5) line -> int . int operationi
    (8) line -> int . float operationf
    (9) line -> int . line
    (11) line -> int .
    (13) int -> . INT
    (14) float -> . FLOAT
    (3) line -> . COMMENT
    (4) line -> . PONTO
    (5) line -> . int int operationi
    (6) line -> . float float operationf
    (7) line -> . float int operationf
    (8) line -> . int float operationf
    (9) line -> . int line
    (10) line -> . float line
    (11) line -> . int
    (12) line -> . float
    (15) line -> . COLON WORD COMMENT code SEMICOLON
    (17) line -> . WORD

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for PONTO resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for WORD resolved as shift
    $end            reduce using rule 11 (line -> int .)
    SEMICOLON       reduce using rule 11 (line -> int .)
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    COMMENT         shift and go to state 4
    PONTO           shift and go to state 5
    COLON           shift and go to state 8
    WORD            shift and go to state 9

  ! COMMENT         [ reduce using rule 11 (line -> int .) ]
  ! PONTO           [ reduce using rule 11 (line -> int .) ]
  ! COLON           [ reduce using rule 11 (line -> int .) ]
  ! WORD            [ reduce using rule 11 (line -> int .) ]
  ! INT             [ reduce using rule 11 (line -> int .) ]
  ! FLOAT           [ reduce using rule 11 (line -> int .) ]

    int                            shift and go to state 12
    float                          shift and go to state 13
    line                           shift and go to state 14

state 7

    (6) line -> float . float operationf
    (7) line -> float . int operationf
    (10) line -> float . line
    (12) line -> float .
    (14) float -> . FLOAT
    (13) int -> . INT
    (3) line -> . COMMENT
    (4) line -> . PONTO
    (5) line -> . int int operationi
    (6) line -> . float float operationf
    (7) line -> . float int operationf
    (8) line -> . int float operationf
    (9) line -> . int line
    (10) line -> . float line
    (11) line -> . int
    (12) line -> . float
    (15) line -> . COLON WORD COMMENT code SEMICOLON
    (17) line -> . WORD

  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for PONTO resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for WORD resolved as shift
    $end            reduce using rule 12 (line -> float .)
    SEMICOLON       reduce using rule 12 (line -> float .)
    FLOAT           shift and go to state 11
    INT             shift and go to state 10
    COMMENT         shift and go to state 4
    PONTO           shift and go to state 5
    COLON           shift and go to state 8
    WORD            shift and go to state 9

  ! COMMENT         [ reduce using rule 12 (line -> float .) ]
  ! PONTO           [ reduce using rule 12 (line -> float .) ]
  ! COLON           [ reduce using rule 12 (line -> float .) ]
  ! WORD            [ reduce using rule 12 (line -> float .) ]
  ! INT             [ reduce using rule 12 (line -> float .) ]
  ! FLOAT           [ reduce using rule 12 (line -> float .) ]

    float                          shift and go to state 15
    int                            shift and go to state 16
    line                           shift and go to state 17

state 8

    (15) line -> COLON . WORD COMMENT code SEMICOLON

    WORD            shift and go to state 18


state 9

    (17) line -> WORD .

    COMMENT         reduce using rule 17 (line -> WORD .)
    PONTO           reduce using rule 17 (line -> WORD .)
    COLON           reduce using rule 17 (line -> WORD .)
    WORD            reduce using rule 17 (line -> WORD .)
    INT             reduce using rule 17 (line -> WORD .)
    FLOAT           reduce using rule 17 (line -> WORD .)
    $end            reduce using rule 17 (line -> WORD .)
    SEMICOLON       reduce using rule 17 (line -> WORD .)


state 10

    (13) int -> INT .

    INT             reduce using rule 13 (int -> INT .)
    FLOAT           reduce using rule 13 (int -> INT .)
    COMMENT         reduce using rule 13 (int -> INT .)
    PONTO           reduce using rule 13 (int -> INT .)
    COLON           reduce using rule 13 (int -> INT .)
    WORD            reduce using rule 13 (int -> INT .)
    $end            reduce using rule 13 (int -> INT .)
    PLUS            reduce using rule 13 (int -> INT .)
    MINUS           reduce using rule 13 (int -> INT .)
    TIMES           reduce using rule 13 (int -> INT .)
    DIVIDE          reduce using rule 13 (int -> INT .)
    MOD             reduce using rule 13 (int -> INT .)
    SEMICOLON       reduce using rule 13 (int -> INT .)


state 11

    (14) float -> FLOAT .

    FLOAT           reduce using rule 14 (float -> FLOAT .)
    INT             reduce using rule 14 (float -> FLOAT .)
    COMMENT         reduce using rule 14 (float -> FLOAT .)
    PONTO           reduce using rule 14 (float -> FLOAT .)
    COLON           reduce using rule 14 (float -> FLOAT .)
    WORD            reduce using rule 14 (float -> FLOAT .)
    $end            reduce using rule 14 (float -> FLOAT .)
    PLUS            reduce using rule 14 (float -> FLOAT .)
    MINUS           reduce using rule 14 (float -> FLOAT .)
    TIMES           reduce using rule 14 (float -> FLOAT .)
    DIVIDE          reduce using rule 14 (float -> FLOAT .)
    SEMICOLON       reduce using rule 14 (float -> FLOAT .)


state 12

    (5) line -> int int . operationi
    (5) line -> int . int operationi
    (8) line -> int . float operationf
    (9) line -> int . line
    (11) line -> int .
    (18) operationi -> . PLUS
    (19) operationi -> . MINUS
    (20) operationi -> . TIMES
    (21) operationi -> . DIVIDE
    (22) operationi -> . MOD
    (13) int -> . INT
    (14) float -> . FLOAT
    (3) line -> . COMMENT
    (4) line -> . PONTO
    (5) line -> . int int operationi
    (6) line -> . float float operationf
    (7) line -> . float int operationf
    (8) line -> . int float operationf
    (9) line -> . int line
    (10) line -> . float line
    (11) line -> . int
    (12) line -> . float
    (15) line -> . COLON WORD COMMENT code SEMICOLON
    (17) line -> . WORD

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for PONTO resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for WORD resolved as shift
    $end            reduce using rule 11 (line -> int .)
    SEMICOLON       reduce using rule 11 (line -> int .)
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    TIMES           shift and go to state 22
    DIVIDE          shift and go to state 23
    MOD             shift and go to state 24
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    COMMENT         shift and go to state 4
    PONTO           shift and go to state 5
    COLON           shift and go to state 8
    WORD            shift and go to state 9

  ! COMMENT         [ reduce using rule 11 (line -> int .) ]
  ! PONTO           [ reduce using rule 11 (line -> int .) ]
  ! COLON           [ reduce using rule 11 (line -> int .) ]
  ! WORD            [ reduce using rule 11 (line -> int .) ]
  ! INT             [ reduce using rule 11 (line -> int .) ]
  ! FLOAT           [ reduce using rule 11 (line -> int .) ]

    int                            shift and go to state 12
    operationi                     shift and go to state 19
    float                          shift and go to state 13
    line                           shift and go to state 14

state 13

    (8) line -> int float . operationf
    (6) line -> float . float operationf
    (7) line -> float . int operationf
    (10) line -> float . line
    (12) line -> float .
    (23) operationf -> . PLUS
    (24) operationf -> . MINUS
    (25) operationf -> . TIMES
    (26) operationf -> . DIVIDE
    (14) float -> . FLOAT
    (13) int -> . INT
    (3) line -> . COMMENT
    (4) line -> . PONTO
    (5) line -> . int int operationi
    (6) line -> . float float operationf
    (7) line -> . float int operationf
    (8) line -> . int float operationf
    (9) line -> . int line
    (10) line -> . float line
    (11) line -> . int
    (12) line -> . float
    (15) line -> . COLON WORD COMMENT code SEMICOLON
    (17) line -> . WORD

  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for PONTO resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for WORD resolved as shift
    $end            reduce using rule 12 (line -> float .)
    SEMICOLON       reduce using rule 12 (line -> float .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    FLOAT           shift and go to state 11
    INT             shift and go to state 10
    COMMENT         shift and go to state 4
    PONTO           shift and go to state 5
    COLON           shift and go to state 8
    WORD            shift and go to state 9

  ! COMMENT         [ reduce using rule 12 (line -> float .) ]
  ! PONTO           [ reduce using rule 12 (line -> float .) ]
  ! COLON           [ reduce using rule 12 (line -> float .) ]
  ! WORD            [ reduce using rule 12 (line -> float .) ]
  ! INT             [ reduce using rule 12 (line -> float .) ]
  ! FLOAT           [ reduce using rule 12 (line -> float .) ]

    int                            shift and go to state 16
    float                          shift and go to state 15
    operationf                     shift and go to state 25
    line                           shift and go to state 17

state 14

    (9) line -> int line .

    COMMENT         reduce using rule 9 (line -> int line .)
    PONTO           reduce using rule 9 (line -> int line .)
    COLON           reduce using rule 9 (line -> int line .)
    WORD            reduce using rule 9 (line -> int line .)
    INT             reduce using rule 9 (line -> int line .)
    FLOAT           reduce using rule 9 (line -> int line .)
    $end            reduce using rule 9 (line -> int line .)
    SEMICOLON       reduce using rule 9 (line -> int line .)


state 15

    (6) line -> float float . operationf
    (6) line -> float . float operationf
    (7) line -> float . int operationf
    (10) line -> float . line
    (12) line -> float .
    (23) operationf -> . PLUS
    (24) operationf -> . MINUS
    (25) operationf -> . TIMES
    (26) operationf -> . DIVIDE
    (14) float -> . FLOAT
    (13) int -> . INT
    (3) line -> . COMMENT
    (4) line -> . PONTO
    (5) line -> . int int operationi
    (6) line -> . float float operationf
    (7) line -> . float int operationf
    (8) line -> . int float operationf
    (9) line -> . int line
    (10) line -> . float line
    (11) line -> . int
    (12) line -> . float
    (15) line -> . COLON WORD COMMENT code SEMICOLON
    (17) line -> . WORD

  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for PONTO resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for WORD resolved as shift
    $end            reduce using rule 12 (line -> float .)
    SEMICOLON       reduce using rule 12 (line -> float .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    FLOAT           shift and go to state 11
    INT             shift and go to state 10
    COMMENT         shift and go to state 4
    PONTO           shift and go to state 5
    COLON           shift and go to state 8
    WORD            shift and go to state 9

  ! COMMENT         [ reduce using rule 12 (line -> float .) ]
  ! PONTO           [ reduce using rule 12 (line -> float .) ]
  ! COLON           [ reduce using rule 12 (line -> float .) ]
  ! WORD            [ reduce using rule 12 (line -> float .) ]
  ! INT             [ reduce using rule 12 (line -> float .) ]
  ! FLOAT           [ reduce using rule 12 (line -> float .) ]

    float                          shift and go to state 15
    operationf                     shift and go to state 30
    int                            shift and go to state 16
    line                           shift and go to state 17

state 16

    (7) line -> float int . operationf
    (5) line -> int . int operationi
    (8) line -> int . float operationf
    (9) line -> int . line
    (11) line -> int .
    (23) operationf -> . PLUS
    (24) operationf -> . MINUS
    (25) operationf -> . TIMES
    (26) operationf -> . DIVIDE
    (13) int -> . INT
    (14) float -> . FLOAT
    (3) line -> . COMMENT
    (4) line -> . PONTO
    (5) line -> . int int operationi
    (6) line -> . float float operationf
    (7) line -> . float int operationf
    (8) line -> . int float operationf
    (9) line -> . int line
    (10) line -> . float line
    (11) line -> . int
    (12) line -> . float
    (15) line -> . COLON WORD COMMENT code SEMICOLON
    (17) line -> . WORD

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for PONTO resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for WORD resolved as shift
    $end            reduce using rule 11 (line -> int .)
    SEMICOLON       reduce using rule 11 (line -> int .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    COMMENT         shift and go to state 4
    PONTO           shift and go to state 5
    COLON           shift and go to state 8
    WORD            shift and go to state 9

  ! COMMENT         [ reduce using rule 11 (line -> int .) ]
  ! PONTO           [ reduce using rule 11 (line -> int .) ]
  ! COLON           [ reduce using rule 11 (line -> int .) ]
  ! WORD            [ reduce using rule 11 (line -> int .) ]
  ! INT             [ reduce using rule 11 (line -> int .) ]
  ! FLOAT           [ reduce using rule 11 (line -> int .) ]

    float                          shift and go to state 13
    int                            shift and go to state 12
    operationf                     shift and go to state 31
    line                           shift and go to state 14

state 17

    (10) line -> float line .

    COMMENT         reduce using rule 10 (line -> float line .)
    PONTO           reduce using rule 10 (line -> float line .)
    COLON           reduce using rule 10 (line -> float line .)
    WORD            reduce using rule 10 (line -> float line .)
    INT             reduce using rule 10 (line -> float line .)
    FLOAT           reduce using rule 10 (line -> float line .)
    $end            reduce using rule 10 (line -> float line .)
    SEMICOLON       reduce using rule 10 (line -> float line .)


state 18

    (15) line -> COLON WORD . COMMENT code SEMICOLON

    COMMENT         shift and go to state 32


state 19

    (5) line -> int int operationi .

    COMMENT         reduce using rule 5 (line -> int int operationi .)
    PONTO           reduce using rule 5 (line -> int int operationi .)
    COLON           reduce using rule 5 (line -> int int operationi .)
    WORD            reduce using rule 5 (line -> int int operationi .)
    INT             reduce using rule 5 (line -> int int operationi .)
    FLOAT           reduce using rule 5 (line -> int int operationi .)
    $end            reduce using rule 5 (line -> int int operationi .)
    SEMICOLON       reduce using rule 5 (line -> int int operationi .)


state 20

    (18) operationi -> PLUS .

    COMMENT         reduce using rule 18 (operationi -> PLUS .)
    PONTO           reduce using rule 18 (operationi -> PLUS .)
    COLON           reduce using rule 18 (operationi -> PLUS .)
    WORD            reduce using rule 18 (operationi -> PLUS .)
    INT             reduce using rule 18 (operationi -> PLUS .)
    FLOAT           reduce using rule 18 (operationi -> PLUS .)
    $end            reduce using rule 18 (operationi -> PLUS .)
    SEMICOLON       reduce using rule 18 (operationi -> PLUS .)


state 21

    (19) operationi -> MINUS .

    COMMENT         reduce using rule 19 (operationi -> MINUS .)
    PONTO           reduce using rule 19 (operationi -> MINUS .)
    COLON           reduce using rule 19 (operationi -> MINUS .)
    WORD            reduce using rule 19 (operationi -> MINUS .)
    INT             reduce using rule 19 (operationi -> MINUS .)
    FLOAT           reduce using rule 19 (operationi -> MINUS .)
    $end            reduce using rule 19 (operationi -> MINUS .)
    SEMICOLON       reduce using rule 19 (operationi -> MINUS .)


state 22

    (20) operationi -> TIMES .

    COMMENT         reduce using rule 20 (operationi -> TIMES .)
    PONTO           reduce using rule 20 (operationi -> TIMES .)
    COLON           reduce using rule 20 (operationi -> TIMES .)
    WORD            reduce using rule 20 (operationi -> TIMES .)
    INT             reduce using rule 20 (operationi -> TIMES .)
    FLOAT           reduce using rule 20 (operationi -> TIMES .)
    $end            reduce using rule 20 (operationi -> TIMES .)
    SEMICOLON       reduce using rule 20 (operationi -> TIMES .)


state 23

    (21) operationi -> DIVIDE .

    COMMENT         reduce using rule 21 (operationi -> DIVIDE .)
    PONTO           reduce using rule 21 (operationi -> DIVIDE .)
    COLON           reduce using rule 21 (operationi -> DIVIDE .)
    WORD            reduce using rule 21 (operationi -> DIVIDE .)
    INT             reduce using rule 21 (operationi -> DIVIDE .)
    FLOAT           reduce using rule 21 (operationi -> DIVIDE .)
    $end            reduce using rule 21 (operationi -> DIVIDE .)
    SEMICOLON       reduce using rule 21 (operationi -> DIVIDE .)


state 24

    (22) operationi -> MOD .

    COMMENT         reduce using rule 22 (operationi -> MOD .)
    PONTO           reduce using rule 22 (operationi -> MOD .)
    COLON           reduce using rule 22 (operationi -> MOD .)
    WORD            reduce using rule 22 (operationi -> MOD .)
    INT             reduce using rule 22 (operationi -> MOD .)
    FLOAT           reduce using rule 22 (operationi -> MOD .)
    $end            reduce using rule 22 (operationi -> MOD .)
    SEMICOLON       reduce using rule 22 (operationi -> MOD .)


state 25

    (8) line -> int float operationf .

    COMMENT         reduce using rule 8 (line -> int float operationf .)
    PONTO           reduce using rule 8 (line -> int float operationf .)
    COLON           reduce using rule 8 (line -> int float operationf .)
    WORD            reduce using rule 8 (line -> int float operationf .)
    INT             reduce using rule 8 (line -> int float operationf .)
    FLOAT           reduce using rule 8 (line -> int float operationf .)
    $end            reduce using rule 8 (line -> int float operationf .)
    SEMICOLON       reduce using rule 8 (line -> int float operationf .)


state 26

    (23) operationf -> PLUS .

    COMMENT         reduce using rule 23 (operationf -> PLUS .)
    PONTO           reduce using rule 23 (operationf -> PLUS .)
    COLON           reduce using rule 23 (operationf -> PLUS .)
    WORD            reduce using rule 23 (operationf -> PLUS .)
    INT             reduce using rule 23 (operationf -> PLUS .)
    FLOAT           reduce using rule 23 (operationf -> PLUS .)
    $end            reduce using rule 23 (operationf -> PLUS .)
    SEMICOLON       reduce using rule 23 (operationf -> PLUS .)


state 27

    (24) operationf -> MINUS .

    COMMENT         reduce using rule 24 (operationf -> MINUS .)
    PONTO           reduce using rule 24 (operationf -> MINUS .)
    COLON           reduce using rule 24 (operationf -> MINUS .)
    WORD            reduce using rule 24 (operationf -> MINUS .)
    INT             reduce using rule 24 (operationf -> MINUS .)
    FLOAT           reduce using rule 24 (operationf -> MINUS .)
    $end            reduce using rule 24 (operationf -> MINUS .)
    SEMICOLON       reduce using rule 24 (operationf -> MINUS .)


state 28

    (25) operationf -> TIMES .

    COMMENT         reduce using rule 25 (operationf -> TIMES .)
    PONTO           reduce using rule 25 (operationf -> TIMES .)
    COLON           reduce using rule 25 (operationf -> TIMES .)
    WORD            reduce using rule 25 (operationf -> TIMES .)
    INT             reduce using rule 25 (operationf -> TIMES .)
    FLOAT           reduce using rule 25 (operationf -> TIMES .)
    $end            reduce using rule 25 (operationf -> TIMES .)
    SEMICOLON       reduce using rule 25 (operationf -> TIMES .)


state 29

    (26) operationf -> DIVIDE .

    COMMENT         reduce using rule 26 (operationf -> DIVIDE .)
    PONTO           reduce using rule 26 (operationf -> DIVIDE .)
    COLON           reduce using rule 26 (operationf -> DIVIDE .)
    WORD            reduce using rule 26 (operationf -> DIVIDE .)
    INT             reduce using rule 26 (operationf -> DIVIDE .)
    FLOAT           reduce using rule 26 (operationf -> DIVIDE .)
    $end            reduce using rule 26 (operationf -> DIVIDE .)
    SEMICOLON       reduce using rule 26 (operationf -> DIVIDE .)


state 30

    (6) line -> float float operationf .

    COMMENT         reduce using rule 6 (line -> float float operationf .)
    PONTO           reduce using rule 6 (line -> float float operationf .)
    COLON           reduce using rule 6 (line -> float float operationf .)
    WORD            reduce using rule 6 (line -> float float operationf .)
    INT             reduce using rule 6 (line -> float float operationf .)
    FLOAT           reduce using rule 6 (line -> float float operationf .)
    $end            reduce using rule 6 (line -> float float operationf .)
    SEMICOLON       reduce using rule 6 (line -> float float operationf .)


state 31

    (7) line -> float int operationf .

    COMMENT         reduce using rule 7 (line -> float int operationf .)
    PONTO           reduce using rule 7 (line -> float int operationf .)
    COLON           reduce using rule 7 (line -> float int operationf .)
    WORD            reduce using rule 7 (line -> float int operationf .)
    INT             reduce using rule 7 (line -> float int operationf .)
    FLOAT           reduce using rule 7 (line -> float int operationf .)
    $end            reduce using rule 7 (line -> float int operationf .)
    SEMICOLON       reduce using rule 7 (line -> float int operationf .)


state 32

    (15) line -> COLON WORD COMMENT . code SEMICOLON
    (16) code -> . axioma
    (1) axioma -> . axioma line
    (2) axioma -> . empty
    (27) empty -> .

    COMMENT         reduce using rule 27 (empty -> .)
    PONTO           reduce using rule 27 (empty -> .)
    COLON           reduce using rule 27 (empty -> .)
    WORD            reduce using rule 27 (empty -> .)
    INT             reduce using rule 27 (empty -> .)
    FLOAT           reduce using rule 27 (empty -> .)
    SEMICOLON       reduce using rule 27 (empty -> .)

    code                           shift and go to state 33
    axioma                         shift and go to state 34
    empty                          shift and go to state 2

state 33

    (15) line -> COLON WORD COMMENT code . SEMICOLON

    SEMICOLON       shift and go to state 35


state 34

    (16) code -> axioma .
    (1) axioma -> axioma . line
    (3) line -> . COMMENT
    (4) line -> . PONTO
    (5) line -> . int int operationi
    (6) line -> . float float operationf
    (7) line -> . float int operationf
    (8) line -> . int float operationf
    (9) line -> . int line
    (10) line -> . float line
    (11) line -> . int
    (12) line -> . float
    (15) line -> . COLON WORD COMMENT code SEMICOLON
    (17) line -> . WORD
    (13) int -> . INT
    (14) float -> . FLOAT

    SEMICOLON       reduce using rule 16 (code -> axioma .)
    COMMENT         shift and go to state 4
    PONTO           shift and go to state 5
    COLON           shift and go to state 8
    WORD            shift and go to state 9
    INT             shift and go to state 10
    FLOAT           shift and go to state 11

    line                           shift and go to state 3
    int                            shift and go to state 6
    float                          shift and go to state 7

state 35

    (15) line -> COLON WORD COMMENT code SEMICOLON .

    COMMENT         reduce using rule 15 (line -> COLON WORD COMMENT code SEMICOLON .)
    PONTO           reduce using rule 15 (line -> COLON WORD COMMENT code SEMICOLON .)
    COLON           reduce using rule 15 (line -> COLON WORD COMMENT code SEMICOLON .)
    WORD            reduce using rule 15 (line -> COLON WORD COMMENT code SEMICOLON .)
    INT             reduce using rule 15 (line -> COLON WORD COMMENT code SEMICOLON .)
    FLOAT           reduce using rule 15 (line -> COLON WORD COMMENT code SEMICOLON .)
    $end            reduce using rule 15 (line -> COLON WORD COMMENT code SEMICOLON .)
    SEMICOLON       reduce using rule 15 (line -> COLON WORD COMMENT code SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INT in state 6 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 6 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 6 resolved as shift
WARNING: shift/reduce conflict for PONTO in state 6 resolved as shift
WARNING: shift/reduce conflict for COLON in state 6 resolved as shift
WARNING: shift/reduce conflict for WORD in state 6 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 7 resolved as shift
WARNING: shift/reduce conflict for INT in state 7 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 7 resolved as shift
WARNING: shift/reduce conflict for PONTO in state 7 resolved as shift
WARNING: shift/reduce conflict for COLON in state 7 resolved as shift
WARNING: shift/reduce conflict for WORD in state 7 resolved as shift
WARNING: shift/reduce conflict for INT in state 12 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 12 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 12 resolved as shift
WARNING: shift/reduce conflict for PONTO in state 12 resolved as shift
WARNING: shift/reduce conflict for COLON in state 12 resolved as shift
WARNING: shift/reduce conflict for WORD in state 12 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 13 resolved as shift
WARNING: shift/reduce conflict for INT in state 13 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 13 resolved as shift
WARNING: shift/reduce conflict for PONTO in state 13 resolved as shift
WARNING: shift/reduce conflict for COLON in state 13 resolved as shift
WARNING: shift/reduce conflict for WORD in state 13 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 15 resolved as shift
WARNING: shift/reduce conflict for INT in state 15 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 15 resolved as shift
WARNING: shift/reduce conflict for PONTO in state 15 resolved as shift
WARNING: shift/reduce conflict for COLON in state 15 resolved as shift
WARNING: shift/reduce conflict for WORD in state 15 resolved as shift
WARNING: shift/reduce conflict for INT in state 16 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 16 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 16 resolved as shift
WARNING: shift/reduce conflict for PONTO in state 16 resolved as shift
WARNING: shift/reduce conflict for COLON in state 16 resolved as shift
WARNING: shift/reduce conflict for WORD in state 16 resolved as shift
